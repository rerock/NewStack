c
search_result.as_json

q
c
@search_results
c
json: message
message.as_json
message_params
c
message_params
q
message_params
q
message.as_json
message
message_params
exit
User.find_by_id(1)
user
user.save
user.save!!
user
User.find_by_id(5)
User.all
user.save
user
q
a
a.save
a.last_receivable_type = params[:receivable_type]
a.last_receivable_id = params[:receivable_id].to_i
a = User.find_by_id(params[:current_user_id])
User.find_by_id(params[:current_user_id])
User.find_by_id(params[:current_user_id]).save
User.find_by_id(params[:current_user_id]).last_receivable_type = params[:receivable_type]
User.find_by_id(params[:current_user_id]).last_receivable_id = params[:receivable_id].to_i
exit
User.find_by_id(params[:current_user_id]).last_receivable_id = params[:receivable_id].to_i
me
me.save
me.last_receivable_type = params[:receivable_type]
me
me.save
me.last_receivable_id = params[:receivable_id].to_i
me =  User.find_by_id(params[:current_user_id])
User.find_by_id(params[:current_user_id]).last_receivable_id = params[:receivable_id].to_i
User.find_by_id(params[:current_user_id])[ = "Channel"
User.find_by_id(params[:current_user_id])
User.find_by_id(params[:current_user_id]).save
User.find_by_id(params[:current_user_id]).last_receivable_type = "Channel"
User.find_by_id(params[:current_user_id]).last_receivable_type
User.find_by_id(params[:current_user_id])
User.all
User.find_by_id(params[:current_user_id]).save
User.find_by_id(params[:current_user_id]).last_receivable_type = params[:receivable_type]
User.find_by_id(params[:current_user_id]).last_receivable_id = params[:receivable_id].to_i
exit
User.find_by_id(params[:current_user_id]).last_receivable_id = params[:receivable_id].to_i
User.find_by_id(params[:current_user_id]).last_receivable_id = params[:receivable_id].to_i)
c
User.find_by_id(params[:current_user_id])
User.find_by_id([:paramUs
params
c
      }
        && (msg.receivable_id == params[:receivable_id].to_i)
        (msg.receivable_type == 'Channel')
messages = Message.all.select { |msg|
      }
        && msg.receivable_id == params[:receivable_id].to_i
        msg.receivable_type == 'Channel'
Message.all.select { |msg|
params
â‰ˆ
c
message.as_json
message.to_json
message
exit
q
params[:message]
parmas[:message]
params
c
q
params[:message]
params[message]
params
q
params
c
q
Pusher.trigger('chat_channel','forward_message', {"message": "hello"})
      Pusher.trigger('chat_channel', 'forward_message', { "message"=> message.sender_id })
      Pusher.trigger('chat_channel', 'forward_message', { "message": message.sender_id })
      Pusher.trigger('chat_channel', 'forward_message', { message: message.sender_id })
        message: message.sender_id
Pusher.trigger('chat_channel', 'forward_message', {
        message: message.sender_id
      Pusher.trigger('chat_channel', 'forward_message', {
message
exit
params
exit
params
q
params
q
exit
params
params[:receivable_id]
c
params[:receivable_id]
params
c
params[:receivable_id]
params
c
params
c
params
c
params
c
data
params
c
params
c
params[:team_id]
params
c
q
params[:chan]
params[:channel]
/Users/wenliang/Desktop/recipes/frontend/entry.jsx fff
c
@user
user
